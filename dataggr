#!/bin/bash

# set -x

# https://pubs.opengroup.org/onlinepubs/9699919799/utilities/getopts.html
# https://stackoverflow.com/questions/12022592/how-can-i-use-long-options-with-the-bash-getopts-builtin

for arg in "$@"; do
  shift
  case "$arg" in
    "--table") set -- "$@" "-t" ;;
    "--help")  set -- "$@" "-h" ;;
    *)         set -- "$@" "$arg"
  esac
done

print_usage() {
  printf "\n"
  printf "  Usage: %s: [-h|--help] [-t|--table] table schema\n\n" $0
  printf "  Example:\n\n"
  printf "      # \`index\` field is reserved\n"
  printf "      %s mytable time:INT64,qtr:STRING,sales:FLOAT\n\n" $0
  printf "      # Do not create a new table, use the table directly\n"
  printf "      %s -t 20210217230434-mytable time:INT64,qtr:STRING,sales:FLOAT\n\n" $0
}

tflag=

# Parse short options
while getopts "ht:" opt; do
  case "$opt" in
    t) tflag=1; shift ;;
    h) print_usage; exit 0 ;;
    ?) print_usage >&2; exit 1 ;;
  esac
done

if [[ $# -ne 2 ]]; then
  print_usage; exit 1
fi

table=$1
schema=$2

table=${table:?}
schema=${schema:?}


schema=index:INT64,$schema
if [[ -z $tflag ]]; then
  table=$(date +%Y%m%d%H%M%S)-$table
fi

echo "Table:  $table"
echo "Schema: $schema"

if [[ -z $tflag ]]; then
  bq mk --table $table $schema
fi

# bq query 'SELECT * FROM `__TABLES__`'
bq show $table

info=$(bq show --format=json $table)
id=$(jq -r '.id' <<< $info)
num_of_rows=$(jq -r '.numRows' <<< $info)

index_qry=$(bq query --format=json "SELECT IFNULL(MAX(index), 0) AS max FROM \`$table\`")
index=$(jq -r '.[].max' <<< $index_qry)


print_status() {
  echo "    Your id:                 $id"
  echo "    Current max index:       $index"
  echo "    Collected num of rows:   $num_of_rows"
  echo ""
}

print_status

echo "Start collecting data:"

while true; do
  query_str=""

  # read line timeout 10 secs
  while read -t 10 line; do
    # if line is empty
    if [[ -z $line ]]; then
      continue
    fi

    (( index++ ))
    (( num_of_rows++ ))
    query_str+=",($index,$line)"

    # break every N rows
    if ! ((index % 100)); then
      break
    fi
  done

  if [[ -n $query_str ]]; then
    bq query "INSERT INTO \`$table\` VALUES ${query_str#*,}"
    print_status

    if [[ $? -ne 0 ]]; then
      printf "\nError: when insert the data:\n"
      echo ${query_str#*,}
      printf "\n\n"
    fi
  fi
done

# set +x

